unit U_Login;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, DB, DBTables;

type
  TF_Login = class(TForm)
    lblLogin: TLabel;
    LblSenha: TLabel;
    EditLoginValue: TEdit;
    EditSenhaValue: TEdit;
    BtnEntrar: TButton;
    procedure BtnEntrarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  F_Login: TF_Login;

implementation

uses
  U_Aux, U_Home, U_Funcoes;

{$R *.dfm}

procedure TF_Login.BtnEntrarClick(Sender: TObject);
begin
 	//DmAux.Qry_Login.Close;
  DmAux.Qry_Login.sql.clear;
  if(EditLoginValue.text <> '') then  //REMOVER IF NO FIM - SERVE PARA LOGAR DIRETO NO MASTER
  begin
  DmAux.Qry_Login.sql.text :=	'SELECT                     ' +
                        			'	*                         ' +
                              'FROM                       ' +
                              '	usuario (NOLOCK)        	' +
												      'WHERE                      ' +
                              '	LOGIN = :Login      			' +
                              'AND                        ' +
                              '	SENHA = :Senha      			';
  DmAux.Qry_Login.ParamByName('Login').AsString := EditLoginValue.text;
  DmAux.Qry_Login.ParamByName('Senha').AsString := MD5(EditSenhaValue.text);
  end
  else
  begin
  DmAux.Qry_Login.sql.text :=	'SELECT                     ' +
                        			'	*                         ' +
                              'FROM                       ' +
                              '	usuario (NOLOCK)        	' +
												      'WHERE                      ' +
                              '	LOGIN = master      			';
  end;
  DmAux.Qry_Login.open;

  if (DmAux.Qry_Login.IsEmpty) then
  begin
    Showmessage('Login errado ou vazio, tente novamente.');
    exit;
  end;
  showmessage('Usuário logado com sucesso.');

  	//F_Home.logou := true;
    F_Home.AtualizarLogin(True);

  	F_Login.Close;
end;

end.
